#!/bin/bash

# CronicS -- extended cron job wrapper
# (with _s_earch capability, hence the s)
# Canonical download source: https://github.com/n-st/cronics/
# Based on the tremendously useful original by Chuck Houpt:
#  Cronic v3 - cron job report wrapper
#  Copyright 2007-2016 Chuck Houpt. No rights reserved, whatsoever.
#  Public Domain CC0: http://creativecommons.org/publicdomain/zero/1.0/
# Canonical download source for the original: https://habilis.net/cronic/

set -eu

TMP=$(mktemp -d)
OUT=$TMP/cronic.out
ERR=$TMP/cronic.err
TRACE=$TMP/cronic.trace

# additional error/non-error conditions:
#   error when X in stdout:                     cronic +X
#   error when X not in stdout or stderr:       cronic +!X
#   no error when X in stdout or stderr:        cronic -X
#   no error when exit status != 0:             cronic --ignore-exit-status
E_WHEN_PRESENT=""
E_WHEN_NOT_PRESENT=""
NE_WHEN_PRESENT=""
NE_WHEN_NONZERO_EXIT=0
while [ "$1" != "--" ]
do
    case "$1" in
        +!*)
            E_WHEN_NOT_PRESENT="${1:2}"
            ;;
        +*)
            E_WHEN_PRESENT="${1:1}"
            ;;
        --ignore-exit-status)
            NE_WHEN_NONZERO_EXIT=1
            ;;
        --*|-!*)
            # Forward compatibility in case we ever need it
            ;;
        -*)
            NE_WHEN_PRESENT="${1:1}"
            ;;
    esac

    shift
done

# and now on to the actual command ...
shift

set +e
"$@" >$OUT 2>$TRACE
RESULT=$?
set -e

PATTERN="^${PS4:0:1}\\+${PS4:1}"
if grep -aq "$PATTERN" $TRACE
then
    ! grep -av "$PATTERN" $TRACE > $ERR
else
    ERR=$TRACE
fi

HAS_ERROR=0
PROBLEMS=""
if [ $RESULT -ne 0 -a "$NE_WHEN_NONZERO_EXIT" -ne 1 ]
then
    HAS_ERROR=1
    PROBLEMS="${PROBLEMS}- non-zero exit code"$'\n'
fi
if [ -s "$ERR" ]
then
    if [ -z "$NE_WHEN_PRESENT" ] || ! grep -- "$NE_WHEN_PRESENT" "$OUT" "$ERR" > /dev/null
    then
        HAS_ERROR=1
        PROBLEMS="${PROBLEMS}- output to stderr"$'\n'
    fi
fi
if [ -n "$E_WHEN_PRESENT" ] && grep -- "$E_WHEN_PRESENT" "$OUT" "$ERR" > /dev/null
then
    HAS_ERROR=1
    PROBLEMS="${PROBLEMS}- stdout or stderr matches search string '$E_WHEN_PRESENT'"$'\n'
fi
if [ -n "$E_WHEN_NOT_PRESENT" ] && grep -v -- "$E_WHEN_NOT_PRESENT" "$OUT" "$ERR" > /dev/null
then
    HAS_ERROR=1
    PROBLEMS="${PROBLEMS}- stdout or stderr does not match search string '$E_WHEN_NOT_PRESENT'"$'\n'
fi

if [ $HAS_ERROR -ne 0 ]
then
    echo "Cronic detected problems with the command:"
    echo "$@"
    echo
    echo "PROBLEMS:"
    echo "$PROBLEMS"
    # $PROBLEMS contains a trailing newline, so we don't need to echo here
    echo "RESULT CODE: $RESULT"
    echo
    echo "ERROR OUTPUT:"
    cat "$ERR"
    echo
    echo "STANDARD OUTPUT:"
    cat "$OUT"
    if [ $TRACE != $ERR ]
    then
        echo
        echo "TRACE-ERROR OUTPUT:"
        cat "$TRACE"
    fi
fi

rm -rf "$TMP"
